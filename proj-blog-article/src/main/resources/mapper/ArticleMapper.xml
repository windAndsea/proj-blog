<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bandit.blog.article.mapper.ArticleMapper">
    <resultMap id="articleAndLabelMap" type="Article">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="nick_name" property="nickName"/>
        <result column="user_image" property="userImage"/>
        <result column="title" property="title"/>
        <result column="summary" property="summary"/>
        <result column="image_url" property="imageUrl"/>
        <result column="md_content" property="mdContent"/>
        <result column="html_content" property="htmlContent"/>
        <result column="view_count" property="viewCount"/>
        <result column="thumhup" property="thumhup"/>
        <result column="status" property="status"/>
        <result column="ispublic" property="ispublic"/>
        <result column="create_date" property="createDate"/>
        <result column="update_date" property="updateDate"/>
        <collection property="labelList" javaType="list" ofType="Label">
            <id column="label_id" property="id"/>
            <result column="label_name" property="name"/>
        </collection>
        <collection property="labelIds" javaType="list" ofType="string">
            <id column="label_id" property="id"/>
        </collection>
    </resultMap>

    <select id="findArticleAndLabelById" resultMap="articleAndLabelMap">
        SELECT a.id,
               a.user_id,
               a.nick_name,
               a.user_image,
               a.title,
               a.summary,
               a.image_url,
               a.md_content,
               a.html_content,
               a.view_count,
               a.thumhup,
               a.`status`,
               a.ispublic,
               a.create_date,
               a.update_date,
               l.id     label_id,
               l.`name` label_name
        FROM t_blog_article a
                 LEFT JOIN t_blog_article_label al ON a.id = al.article_id
                 LEFT JOIN t_blog_label l ON l.id = al.label_id
        where a.id = #{id}
    </select>

    <delete id="deleteArticleLabel">
        delete
        from t_blog_article_label
        where article_id = #{articleId}
    </delete>

    <insert id="saveArticleLabel">
        insert into t_blog_article_label(id, article_id, label_id)
        values
        <foreach collection="labelIds" item="item" separator=",">
            ('${@com.baomidou.mybatisplus.core.toolkit.IdWorker@getId()}', #{articleId}, #{item})
        </foreach>
    </insert>

    <select id="findListByCategoryIdAndLabelId" resultType="Article">
        SELECT DISTINCT a.id,
        a.user_id,
        a.nick_name,
        a.user_image,
        a.title,
        a.summary,
        a.image_url,
        a.md_content,
        a.html_content,
        a.view_count,
        a.thumhup,
        a.`status`,
        a.ispublic,
        a.create_date,
        a.update_date
        FROM t_blog_article a
        LEFT JOIN t_blog_article_label al ON a.id = al.article_id
        LEFT JOIN t_blog_label l ON al.label_id = l.id
        WHERE a.ispublic = 1
        AND a.`status` = 2
        <if test="articleListReq.labelId != null and articleListReq.labelId != ''">
            AND l.id = #{articleListReq.labelId}
        </if>
        <if test="articleListReq.categoryId != null and articleListReq.categoryId != ''">
            AND l.category_id = #{articleListReq.categoryId}
        </if>
        order by a.update_date desc
    </select>

    <select id="selectCategoryArticleTotal" resultType="map">
        SELECT v.`name`,
               v.total
        FROM v_article_category_total v
    </select>

    <select id="selectLatestSixMonthArticleTotal" resultType="map">
        select v.`year_month`, v.total
        from v_article_latest_six_month_publish_total v
    </select>

    <update id="updateUserInfo">
        update t_blog_article
        set nick_name  = #{nickName},
            user_image = #{userImage}
        where user_id = #{userId};
        update t_blog_comment
        set nick_name  = #{nickName},
            user_image = #{userImage}
        where user_id = #{userId};
    </update>
</mapper>
